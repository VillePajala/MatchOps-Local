name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  # Security and dependency checks
  security:
    name: Security & Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Audit dependencies
        run: npm audit --audit-level=moderate
      
      - name: Check for outdated packages
        run: npm outdated || true

  # Linting and type checking
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Type check
        run: npx tsc --noEmit

  # Test with multiple Node versions
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test -- --coverage --passWithNoTests --watchAll=false
      
      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-node-${{ matrix.node-version }}
          path: |
            coverage/
            junit.xml
          retention-days: 7

  # Build and analyze bundle
  build:
    name: Build & Bundle Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Analyze bundle size
        run: |
          npx next-bundle-analyzer || echo "Bundle analysis requires next-bundle-analyzer package"
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: |
            .next/
            out/
          retention-days: 3
      
      - name: Check build size
        run: |
          echo "Build size:" 
          du -sh .next/ || echo "No .next directory found"

  # E2E tests (if you add Playwright later)
  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    if: false  # Disabled for now, enable when you add Playwright
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Run E2E tests
        run: npm run test:e2e
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  # Summary job that depends on all others
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [security, lint, test, build]
    if: always()
    steps:
      - name: Check all jobs status
        if: needs.security.result != 'success' || needs.lint.result != 'success' || needs.test.result != 'success' || needs.build.result != 'success'
        run: exit 1
      
      - name: Success message
        run: echo "All CI jobs completed successfully! ðŸŽ‰"